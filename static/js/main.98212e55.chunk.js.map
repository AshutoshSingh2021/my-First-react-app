{"version":3,"sources":["components/Navbar.js","components/TextForm.js","components/Alert.js","App.js","reportWebVitals.js","index.js"],"names":["Navbar","props","className","mode","href","title","type","id","role","onClick","toggleMode","htmlFor","TextForm","useState","text","setText","style","color","heading","value","onChange","event","target","backgroundColor","rows","newText","toUpperCase","showAlert","toLowerCase","split","length","prototype","PropTypes","string","isRequired","aboutText","defaultProps","Alert","alert","word","lower","charAt","slice","capitalize","msg","App","setMode","setAlert","message","setTimeout","document","body","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.98212e55.chunk.js","sourcesContent":["import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\n// import { Link } from \"react-router-dom\";\r\n\r\n\r\nexport default function Navbar(props) {\r\n\r\n  return (\r\n    <nav\r\n      className={`navbar navbar-expand-lg navbar-${props.mode} bg-${props.mode}`} \r\n    >\r\n      <div className=\"container-fluid\" >\r\n        <a className=\"navbar-brand\" href=\"#\">\r\n          {props.title}\r\n        </a>\r\n        <button\r\n          className=\"navbar-toggler\"\r\n          type=\"button\"\r\n          data-bs-toggle=\"collapse\"\r\n          data-bs-target=\"#navbarSupportedContent\"\r\n          aria-controls=\"navbarSupportedContent\"\r\n          aria-expanded=\"false\"\r\n          aria-label=\"Toggle navigation\"\r\n        >\r\n          <span className=\"navbar-toggler-icon\"></span>\r\n        </button>\r\n\r\n        <div className=\"collapse navbar-collapse\" id=\"navbarSupportedContent\">\r\n          <ul className=\"navbar-nav me-auto mb-2 mb-lg-0\">\r\n\r\n            <li className=\"nav-item\">\r\n              <a className=\"nav-link active\" aria-current=\"page\" href=\"#\">\r\n                Home\r\n              </a>\r\n            </li>\r\n           \r\n            {/* <li className=\"nav-item\">\r\n              <a className=\"nav-link\" href=\"/about\">\r\n                {props.aboutText}\r\n              </a>\r\n            </li>\r\n            <li className=\"nav-item dropdown\">\r\n              <a\r\n                className=\"nav-link dropdown-toggle\"\r\n                href=\"/\"\r\n                id=\"navbarDropdown\"\r\n                role=\"button\"\r\n                data-bs-toggle=\"dropdown\"\r\n                aria-expanded=\"false\"\r\n              >\r\n                Blogs\r\n              </a>\r\n              <ul className=\"dropdown-menu\" aria-labelledby=\"navbarDropdown\">\r\n                <li>\r\n                  <a className=\"dropdown-item\" href=\"#\">\r\n                    Latest Articles\r\n                  </a>\r\n                </li>\r\n                <li>\r\n                  <a className=\"dropdown-item\" href=\"#\">\r\n                    Most read Articles\r\n                  </a>\r\n                </li>\r\n                <li>\r\n                  <hr className=\"dropdown-divider\" />\r\n                </li>\r\n                <li>\r\n                  <a className=\"dropdown-item\" href=\"#\">\r\n                    You also may like\r\n                  </a>\r\n                </li>\r\n              </ul>\r\n            </li>\r\n            <li className=\"nav-item\">\r\n              <a className=\"nav-link disabled\" href=\"/#\">\r\n                Create your own blog\r\n              </a>\r\n            </li> */}\r\n          </ul>\r\n          <div className={`form-check form-switch text-${props.mode==='light'?'dark':'light'}`}>\r\n            <input\r\n              className=\"form-check-input\"\r\n              type=\"checkbox\"\r\n              role=\"switch\"\r\n              id=\"flexSwitchCheckDefault\"\r\n              onClick = {props.toggleMode}\r\n            />\r\n            <label className=\"form-check-label\" htmlFor=\"flexSwitchCheckDefault\">\r\n             Dark Mode\r\n            </label>\r\n          </div>\r\n          {/* <form className=\"d-flex\">\r\n            <input\r\n              className=\"form-control me-2\"\r\n              type=\"search\"\r\n              placeholder=\"Search\"\r\n              aria-label=\"Search\"\r\n            />\r\n            <button className=\"btn btn-outline-primary\" type=\"submit\">\r\n              Search\r\n            </button>\r\n          </form> */}\r\n        </div>\r\n       \r\n      </div>\r\n    </nav>\r\n  );\r\n}\r\nNavbar.prototype = {\r\n  title: PropTypes.string.isRequired,\r\n  aboutText: PropTypes.string.isRequired,\r\n};\r\nNavbar.defaultProps = { title: \"Set title here\", aboutText: \"About text here\" };\r\n","import React, { useState } from \"react\";\r\n\r\nexport default function TextForm(props) {\r\n\r\n  const handleUpClick = () => {\r\n    // console.log(\"Upper case was clicked:\" + text);\r\n    let newText = text.toUpperCase();\r\n    setText(newText);\r\n    props.showAlert(\"Converted to uppercase!\", \"success\");\r\n  };\r\n  const handleLoClick = () => {\r\n    let newText = text.toLowerCase();\r\n    setText(newText);\r\n    props.showAlert(\"Converted to Lowercase!\", \"success\");\r\n  };\r\n\r\n  // const handleCapText = () => {\r\n  //   let newText = text.toUpperCase();\r\n  //   setText(newText);\r\n  // };\r\n\r\n  const handleClearText = () => {\r\n    let newText = '';\r\n    setText(newText);\r\n    props.showAlert(\"Textarea Cleared!\", \"success\");\r\n  };\r\n\r\n  const handleOnChange = (event) => {\r\n    // console.log(\"On Change\");\r\n    setText(event.target.value);\r\n  };\r\n\r\n  const [text, setText] = useState(\"\");\r\n\r\n  return (\r\n    <>\r\n      <div className=\"container\" style = {{color: props.mode==='dark'?'white':'black'}}>\r\n      <h4>{props.heading}</h4>   \r\n      <div className=\"mb-3 \">\r\n        <textarea\r\n          className=\"form-control\"\r\n          value={text}\r\n          onChange={handleOnChange}\r\n          style = {{backgroundColor: props.mode==='dark'?'grey':'white', color: props.mode==='dark'?'white':'black' }}\r\n          id=\"exampleFormControlTextarea1\"\r\n          rows=\"8\"\r\n        ></textarea>\r\n      </div>\r\n      <button type=\"submit\" className=\"btn btn-primary\" onClick={handleUpClick}>\r\n        Convert to Uppercase\r\n      </button>\r\n      <button type=\"submit\" className=\"btn btn-primary mx-3\" onClick={handleLoClick}>\r\n        Convert to Lowercase\r\n      </button>\r\n      <button type=\"submit\" className=\"btn btn-primary mx-2\" onClick={handleClearText}>\r\n        Clear text \r\n      </button>\r\n      </div>\r\n\r\n      <div className=\"container my-4\" style = {{color: props.mode==='dark'?'white':'black'}}>\r\n        <h4>Your text summary</h4>\r\n      <p> {text.split(\" \").length-1} Words and {text.length} Characters</p>\r\n      <p>{0.008 * (text.split(\" \").length-1)} minutes read</p>\r\n      <h4>Preview</h4>\r\n      <p>{text.length>0?text: \"Enter something in the above textbox to preview it here\"}</p>\r\n      </div>\r\n    </>\r\n  );\r\n}\r\n","import React from \"react\";\r\n\r\nfunction Alert(props) {\r\n    const capitalize = (word) =>\r\n    {\r\n        const lower = word.toLowerCase();\r\n        return lower.charAt(0).toUpperCase()+lower.slice(1);\r\n    }\r\n  return (\r\n   props.alert && <div\r\n      className={`alert alert-${props.alert.type} alert-dismissible fade show`}\r\n      role=\"alert\"\r\n    >\r\n    <strong>{capitalize(props.alert.type)}</strong>:{props.alert.msg} \r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Alert;\r\n","import \"./App.css\";\nimport Navbar from \"./components/Navbar\";\n// import About from \"./components/About\";\nimport TextForm from \"./components/TextForm\";\nimport React, { useState } from \"react\";\nimport Alert from \"./components/Alert\";\n\n// import { BrowserRouter as Router, Switch, Route} from \"react-router-dom\";\n\nfunction App() {\n  const [mode, setMode] = useState(\"light\"); // whether dark mode is enabled or not\n  const [alert, setAlert] = useState(null);\n\n  const showAlert = (message, type) => {\n    setAlert({\n      msg: message,\n      type: type,\n    });\n    setTimeout(() => {\n      setAlert(null);\n    }, 1500);\n  };\n\n  const toggleMode = () => {\n    if (mode === \"light\") {\n      setMode(\"dark\");\n      document.body.style.backgroundColor = \"#001C36\";\n      showAlert(\" Dark mode has been enabled\", \"success \");\n      // setInterval(() => {\n      //   document.title = 'TextUtils - Dark Mode';\n      // }, 2000);\n    } else {\n      setMode(\"light\");\n      document.body.style.backgroundColor = \"white\";\n      showAlert(\"Dark mode has been enabled\", \"success\");\n      document.title = \"TextUtils - Light Mode\";\n    }\n  };\n  return (\n    <> \n     {/* <Router> */}\n      <Navbar\n        title=\"iM Blogs\"\n        aboutText=\"About\"\n        mode={mode}\n        toggleMode={toggleMode}\n      />\n      <Alert alert={alert} />\n      {/* <Navbar/> */}\n    \n        <div className=\"container my-3\">\n          {/* <Switch> */}\n            {/* <Route exact path=\"/about\">\n              <About />\n            </Route> */}\n            {/* <Route exact path=\"/\"> */}\n              <TextForm\n                showAlert={showAlert}\n                heading=\"Enter the text below\"\n                mode={mode}\n              />\n            {/* </Route> */}\n          {/* </Switch> */}\n        </div>\n      {/* </Router> */}\n    </>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}